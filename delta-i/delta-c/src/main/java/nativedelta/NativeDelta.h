/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class nativedelta_NativeDelta */

#ifndef _Included_nativedelta_NativeDelta
#define _Included_nativedelta_NativeDelta
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     nativedelta_NativeDelta
 * Method:    EQIntArray
 * Signature: ([I[I[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_EQIntArray
  (JNIEnv *, jclass, jintArray, jintArray, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    EQIntArrayConst
 * Signature: ([II[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_EQIntArrayConst
  (JNIEnv *, jclass, jintArray, jint, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    EQIntConstArray
 * Signature: (I[I[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_EQIntConstArray
  (JNIEnv *, jclass, jint, jintArray, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    LTIntArray
 * Signature: ([I[I[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_LTIntArray
  (JNIEnv *, jclass, jintArray, jintArray, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    LTIntArrayConst
 * Signature: ([II[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_LTIntArrayConst
  (JNIEnv *, jclass, jintArray, jint, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    LTIntConstArray
 * Signature: (I[I[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_LTIntConstArray
  (JNIEnv *, jclass, jint, jintArray, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    GTIntArray
 * Signature: ([I[I[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_GTIntArray
  (JNIEnv *, jclass, jintArray, jintArray, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    GTIntArrayConst
 * Signature: ([II[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_GTIntArrayConst
  (JNIEnv *, jclass, jintArray, jint, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    GTIntConstArray
 * Signature: (I[I[Z[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_GTIntConstArray
  (JNIEnv *, jclass, jint, jintArray, jbooleanArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    ADDIntArray
 * Signature: ([I[I[I[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_ADDIntArray
  (JNIEnv *, jclass, jintArray, jintArray, jintArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    ADDIntArrayConst
 * Signature: ([II[I[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_ADDIntArrayConst
  (JNIEnv *, jclass, jintArray, jint, jintArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    ADDIntConstArray
 * Signature: (I[I[I[IIII)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_ADDIntConstArray
  (JNIEnv *, jclass, jint, jintArray, jintArray, jintArray, jint, jint, jint);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    EQIntArrayContigousMask
 * Signature: ([I[I[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_EQIntArrayContigousMask
  (JNIEnv *, jclass, jintArray, jintArray, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    EQIntArrayConstContigousMask
 * Signature: ([II[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_EQIntArrayConstContigousMask
  (JNIEnv *, jclass, jintArray, jint, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    EQIntConstArrayContigousMask
 * Signature: (I[I[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_EQIntConstArrayContigousMask
  (JNIEnv *, jclass, jint, jintArray, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    LTIntArrayContigousMask
 * Signature: ([I[I[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_LTIntArrayContigousMask
  (JNIEnv *, jclass, jintArray, jintArray, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    LTIntArrayConstContigousMask
 * Signature: ([II[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_LTIntArrayConstContigousMask
  (JNIEnv *, jclass, jintArray, jint, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    LTIntConstArrayContigousMask
 * Signature: (I[I[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_LTIntConstArrayContigousMask
  (JNIEnv *, jclass, jint, jintArray, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    GTIntArrayContigousMask
 * Signature: ([I[I[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_GTIntArrayContigousMask
  (JNIEnv *, jclass, jintArray, jintArray, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    GTIntArrayConstContigousMask
 * Signature: ([II[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_GTIntArrayConstContigousMask
  (JNIEnv *, jclass, jintArray, jint, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    GTIntConstArrayContigousMask
 * Signature: (I[I[Z)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_GTIntConstArrayContigousMask
  (JNIEnv *, jclass, jint, jintArray, jbooleanArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    ADDIntArrayContigousMask
 * Signature: ([I[I[I)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_ADDIntArrayContigousMask
  (JNIEnv *, jclass, jintArray, jintArray, jintArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    ADDIntArrayConstContigousMask
 * Signature: ([II[I)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_ADDIntArrayConstContigousMask
  (JNIEnv *, jclass, jintArray, jint, jintArray);

/*
 * Class:     nativedelta_NativeDelta
 * Method:    ADDIntConstArrayContigousMask
 * Signature: (I[I[I)V
 */
JNIEXPORT void JNICALL Java_nativedelta_NativeDelta_ADDIntConstArrayContigousMask
  (JNIEnv *, jclass, jint, jintArray, jintArray);

#ifdef __cplusplus
}
#endif
#endif
