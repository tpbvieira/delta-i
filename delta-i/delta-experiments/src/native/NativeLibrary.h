/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class simdMapper_NativeLibrary */

#ifndef _Included_simdMapper_NativeLibrary
#define _Included_simdMapper_NativeLibrary
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     simdMapper_NativeLibrary
 * Method:    Execute
 * Signature: (LjSIMD/ExecutionList;)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_Execute
  (JNIEnv *, jclass, jobject);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    voidNativeCall
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_voidNativeCall
  (JNIEnv *, jclass);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    intNativeCall
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_simdMapper_NativeLibrary_intNativeCall
  (JNIEnv *, jclass);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerSIMD
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerSIMD
  (JNIEnv *, jclass, jint);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerCTotal
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerCTotal
  (JNIEnv *, jclass, jint);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addInteger
 * Signature: ([I[I)[I
 */
JNIEXPORT jintArray JNICALL Java_simdMapper_NativeLibrary_addInteger
  (JNIEnv *, jclass, jintArray, jintArray);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerC
 * Signature: ([I[I)[I
 */
JNIEXPORT jintArray JNICALL Java_simdMapper_NativeLibrary_addIntegerC
  (JNIEnv *, jclass, jintArray, jintArray);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addConstArrayC
 * Signature: (I[I)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addConstArrayC
  (JNIEnv *, jclass, jint, jintArray);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addShort
 * Signature: ([S[S)[S
 */
JNIEXPORT jshortArray JNICALL Java_simdMapper_NativeLibrary_addShort
  (JNIEnv *, jclass, jshortArray, jshortArray);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addByte
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_simdMapper_NativeLibrary_addByte
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerSIMDThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerSIMDThread
  (JNIEnv *, jclass);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerCThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerCThread
  (JNIEnv *, jclass);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerCThreads
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerCThreads
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerArrayCThreads
 * Signature: ([I[II)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerArrayCThreads
  (JNIEnv *, jclass, jintArray, jintArray, jint);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerArrayCThreads1
 * Signature: ([I[II)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerArrayCThreads1
  (JNIEnv *, jclass, jintArray, jintArray, jint);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    addIntegerArrayCThreads2
 * Signature: ([I[II)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_addIntegerArrayCThreads2
  (JNIEnv *, jclass, jintArray, jintArray, jint);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    nativeReferenceCopyTest1
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_nativeReferenceCopyTest1
  (JNIEnv *, jclass, jobject);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    nativeReferenceCopyTest2
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_nativeReferenceCopyTest2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    nativeReferenceCopyTest3
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_nativeReferenceCopyTest3
  (JNIEnv *, jclass, jobject);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    nativeReferenceCopyCompareReferenceTest
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_nativeReferenceCopyCompareReferenceTest
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     simdMapper_NativeLibrary
 * Method:    nativeReferenceCopyCompareCloneTest
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_simdMapper_NativeLibrary_nativeReferenceCopyCompareCloneTest
  (JNIEnv *, jclass, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
